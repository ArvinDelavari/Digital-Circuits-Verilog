$date
	Mon Apr 10 20:27:56 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Stack_tb $end
$var wire 1 ! full $end
$var wire 1 " empty $end
$var wire 8 # dout [7:0] $end
$var parameter 32 $ DEPTH $end
$var parameter 32 % WIDTH $end
$var reg 1 & clk $end
$var reg 8 ' din [7:0] $end
$var reg 1 ( pop $end
$var reg 1 ) push $end
$var reg 1 * rstn $end
$scope module uut $end
$var wire 1 & clk $end
$var wire 8 + din [7:0] $end
$var wire 1 ( pop $end
$var wire 1 ) push $end
$var wire 1 * rstn $end
$var wire 1 ! full $end
$var wire 1 " empty $end
$var parameter 32 , DEPTH $end
$var parameter 32 - WIDTH $end
$var reg 8 . dout [7:0] $end
$var reg 8 / index [7:0] $end
$var reg 8 0 next_dout [7:0] $end
$var reg 8 1 next_index [7:0] $end
$upscope $end
$scope task read_stack $end
$upscope $end
$scope task reset $end
$upscope $end
$scope task write_stack $end
$var reg 8 2 din_tb [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 -
b1000 ,
b1000 %
b1000 $
$end
#0
$dumpvars
bx 2
b0 1
b0 0
b0 /
b0 .
b0 +
0*
0)
0(
b0 '
1&
b0 #
1"
0!
$end
#5
0&
#10
1&
#15
0&
#20
1&
#25
0&
#30
1&
1*
#35
0&
#40
0"
b1 /
b10 1
1&
b10001 '
b10001 +
1)
b10001 2
#45
0&
#50
b1 1
1&
0)
#55
0&
#60
b10 /
b11 1
1&
b100010 '
b100010 +
1)
b100010 2
#65
0&
#70
b10 1
1&
0)
#75
0&
#80
b11 /
b100 1
1&
b110011 '
b110011 +
1)
b110011 2
#85
0&
#90
b11 1
1&
0)
#95
0&
#100
b100 /
b101 1
1&
b1000100 '
b1000100 +
1)
b1000100 2
#105
0&
#110
b100 1
1&
0)
#115
0&
#120
1&
#125
0&
#130
1&
#135
0&
#140
1&
#145
0&
#150
b101 /
b110 1
1&
b10001 '
b10001 +
1)
b10001 2
#155
0&
#160
b101 1
1&
0)
#165
0&
#170
b110 /
b111 1
1&
b100010 '
b100010 +
1)
b100010 2
#175
0&
#180
b110 1
1&
0)
#185
0&
#190
b111 /
b1000 1
1&
b110011 '
b110011 +
1)
b110011 2
#195
0&
#200
b111 1
1&
0)
#205
0&
#210
1!
b1000 /
b1001 1
1&
b1000100 '
b1000100 +
1)
b1000100 2
#215
0&
#220
b1000 1
1&
0)
#225
0&
#230
1&
#235
0&
#240
1&
#245
0&
#250
1&
#255
0&
#260
0!
b111 /
b1000100 #
b1000100 .
b110 1
b110011 0
1&
1(
#265
0&
#270
b111 1
b1000100 0
1&
0(
#275
0&
#280
1&
#285
0&
#290
b110 /
b110011 #
b110011 .
b101 1
b100010 0
1&
1(
#295
0&
#300
b110 1
b110011 0
1&
0(
#305
0&
#310
1&
#315
0&
#320
b111 /
b1000 1
1&
b10101010 '
b10101010 +
1)
b10101010 2
#325
0&
#330
b111 1
1&
0)
#335
0&
#340
1!
b1000 /
b1001 1
1&
b10111011 '
b10111011 +
1)
b10111011 2
#345
0&
#350
b1000 1
1&
0)
#355
0&
#360
1&
#365
0&
#370
1&
#375
0&
#380
1&
#385
0&
#390
0!
b111 /
b10111011 #
b10111011 .
b110 1
b10101010 0
1&
1(
#395
0&
#400
b111 1
b10111011 0
1&
0(
#405
0&
#410
1&
#415
0&
#420
1&
