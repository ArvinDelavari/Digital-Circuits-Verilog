OpenROAD v2.0-8853-g3ec606c02 
This program is licensed under the BSD-3 license. See the LICENSE file for details.
Components of this program may be licensed under more restrictive licenses which must be honored.
Reading liberty file for fast: /third_party/pdks/skywater/skywater130/libs/sky130hd/v0_0_2/lib/sky130_fd_sc_hd__ff_100C_1v95.lib.gz
Reading liberty file for slow: /third_party/pdks/skywater/skywater130/libs/sky130hd/v0_0_2/lib/sky130_fd_sc_hd__ss_n40C_1v40.lib.gz
Reading liberty file for typical: /third_party/pdks/skywater/skywater130/libs/sky130hd/v0_0_2/lib/sky130_fd_sc_hd__tt_025C_1v80.lib.gz
Reading techlef: /third_party/pdks/skywater/skywater130/pdk/v0_0_2/apr/sky130_fd_sc_hd.tlef
[INFO ODB-0222] Reading LEF file: /third_party/pdks/skywater/skywater130/pdk/v0_0_2/apr/sky130_fd_sc_hd.tlef
[INFO ODB-0223]     Created 11 technology layers
[INFO ODB-0224]     Created 25 technology vias
[INFO ODB-0226] Finished LEF file:  /third_party/pdks/skywater/skywater130/pdk/v0_0_2/apr/sky130_fd_sc_hd.tlef
Reading lef: /third_party/pdks/skywater/skywater130/libs/sky130hd/v0_0_2/lef/sky130_fd_sc_hd_merged.lef
[INFO ODB-0222] Reading LEF file: /third_party/pdks/skywater/skywater130/libs/sky130hd/v0_0_2/lef/sky130_fd_sc_hd_merged.lef
[INFO ODB-0225]     Created 437 library cells
[INFO ODB-0226] Finished LEF file:  /third_party/pdks/skywater/skywater130/libs/sky130hd/v0_0_2/lef/sky130_fd_sc_hd_merged.lef
Reading netlist verilog: inputs/Stack_LIFO.vg
Reading SDC: /usr/local/lib/python3.8/dist-packages/siliconcompiler/tools/openroad/scripts/sc_constraints.sdc
[WARNING FLW-0001] Defaulting back to default SDC
[INFO FLW-0001] Creating clock clk with 10.000ns period and 0.000ns jitter.
[INFO FLW-0001] Using sky130_fd_sc_hd__buf_1 as the SDC IO constraint cell
[INFO FLW-0001] Setting output load constraint to 0.023pF.
[INFO FLW-0001] Setting input driving pin constraint to sky130_fd_sc_hd__buf_1/X.
Warning: There are 11 input ports missing set_input_delay.
Warning: There are 10 output ports missing set_output_delay.
Warning: There are 72 unclocked register/latch pins.
Warning: There are 90 unconstrained endpoints.
[INFO ORD-0030] Using 2 thread(s).
########################################################
# FLOORPLANNING
########################################################
# Function adapted from OpenROAD:
# https://github.com/The-OpenROAD-Project/OpenROAD-flow-scripts/blob/ca3004b85e0d4fbee3470115e63b83c498cfed85/flow/scripts/macro_place.tcl#L26
proc design_has_unplaced_macros {} {
  foreach inst [[ord::get_db_block] getInsts] {
    if {[$inst isBlock] && ![$inst isFixed]} {
      return true
    }
  }
  return false
}
proc design_has_unplaced_ios {} {
  foreach inst [[ord::get_db_block] getInsts] {
    if {[$inst isPad] && ![$inst isFixed]} {
      return true
    }
  }
  return false
}
###########################
# Setup Global Connections
###########################
if { [dict exists $sc_cfg tool $sc_tool task $sc_task {file} global_connect] } {
  foreach global_connect [dict get $sc_cfg tool $sc_tool task $sc_task {file} global_connect] {
    puts "Sourcing global connect configuration: ${global_connect}"
    source $global_connect
  }
}
Sourcing global connect configuration: /third_party/pdks/skywater/skywater130/libs/sky130hd/v0_0_2/apr/openroad/global_connect.tcl
###########################
# Initialize floorplan
###########################
if {[dict exists $sc_cfg input asic floorplan]} {
  set def [lindex [dict get $sc_cfg input asic floorplan] 0]
  puts "Reading floorplan DEF: ${def}"
  read_def -floorplan_initialize $def
} else {
  #NOTE: assuming a two tuple value as lower left, upper right
  set sc_diearea   [dict get $sc_cfg constraint outline]
  set sc_corearea  [dict get $sc_cfg constraint corearea]
  if {$sc_diearea != "" && $sc_corearea != ""} {
    # Use die and core sizes
    set sc_diesize  "[lindex $sc_diearea 0] [lindex $sc_diearea 1]"
    set sc_coresize "[lindex $sc_corearea 0] [lindex $sc_corearea 1]"
    initialize_floorplan -die_area $sc_diesize \
      -core_area $sc_coresize \
      -site $sc_site
  } else {
    # Use density
    initialize_floorplan -aspect_ratio [dict get $sc_cfg constraint aspectratio] \
      -utilization [dict get $sc_cfg constraint density] \
      -core_space [dict get $sc_cfg constraint coremargin] \
      -site $sc_site
  }
}
[WARNING IFP-0028] Core area lower left (4.600, 4.600) snapped to (4.600, 5.440).
[INFO IFP-0001] Added 59 rows of 350 site unithd with height 1.
###########################
# Track Creation
###########################
# source tracks from file if found, else else use schema entries
if {[dict exists $sc_cfg library $sc_mainlib option file openroad_tracks]} {
  set tracks_file [lindex [dict get $sc_cfg library $sc_mainlib option file openroad_tracks] 0]
  puts "Sourcing tracks configuration: ${tracks_file}"
  source $tracks_file
} else {
  make_tracks
}
set do_automatic_pins 1
if { [dict exists $sc_cfg tool $sc_tool task $sc_task file padring] && \
     [llength [dict get $sc_cfg tool $sc_tool task $sc_task file padring]] > 0 } {
  set do_automatic_pins 0
  ###########################
  # Generate pad ring
  ###########################
  set padring_file [lindex [dict get $sc_cfg tool $sc_tool task $sc_task {file} padring] 0]
  puts "Sourcing padring configuration: ${padring_file}"
  source $padring_file
  if { [design_has_unplaced_ios] } {
    foreach inst [[ord::get_db_block] getInsts] {
      if {[$inst isPad] && ![$inst isFixed]} {
        utl::warn FLW 1 "[$inst getName] has not been placed"
      }
    }
    utl::error FLW 1 "Design contains unplaced IOs"
  }
}
###########################
# Pin placement
###########################
# Build pin ordering if specified
set pin_order [dict create 1 [dict create] 2 [dict create] 3 [dict create] 4 [dict create]]
set pin_placement [list ]
if {[dict exists $sc_cfg constraint pin]} {
  dict for {name params} [dict get $sc_cfg constraint pin] {
    set order [dict get $params order]
    set side  [dict get $params side]
    set place [dict get $params placement]
    if { [llength $place] != 0 } {
      # Pin has placement information
      if { [llength $order] != 0 } {
        # Pin also has order information
        utl::error FLW 1 "Pin $name has placement specified in constraints, but also order."
      }
      lappend pin_placement $name
    } else {
      # Pin doesn't have placement
      if { [llength $side] == 0 || [llength $order] == 0 } {
        # Pin information is incomplete
        utl::error FLW 1 "Pin $name doesn't have enough information to perform placement."
      }
      dict lappend pin_order [lindex $side 0] [lindex $order 0] $name
    }
  }
}
foreach pin $pin_placement {
  set params [dict get $sc_cfg constraint pin $pin]
  set layer  [dict get $params layer]
  set side   [dict get $params side]
  set place  [dict get $params placement]
  if { [llength $layer] != 0 } {
    set layer [sc_get_layer_name [lindex $layer 0]]
  } elseif { [llength $side] != 0 } {
    # Layer not set, but side is, so use that to determine layer
    set side [lindex $side 0]
    switch -regexp $side {
      "1|3" {
        set layer [lindex $sc_hpinmetal 0]
      }
      "2|4" {
        set layer [lindex $sc_vpinmetal 0]
      }
      default {
        utl::error FLW 1 "Side number ($side) is not supported."
      }
    }
  } else {
    utl::error FLW 1 "$name needs to either specify side or layer parameter."
  }
  set x_loc [lindex $place 0]
  set y_loc [lindex $place 1]
  place_pin -pin_name $name \
    -layer $layer \
    -location "$x_loc $y_loc" \
    -force_to_die_boundary
}
dict for {side pins} $pin_order {
  if { [dict size $pins] == 0 } {
    continue
  }
  set ordered_pins []
  dict for {index pin} $pins {
    lappend ordered_pins {*}$pin
  }
  set layer  [dict get $params layer]
  if { [llength $layer] != 0 } {
    set layer [sc_get_layer_name [lindex $layer 0]]
  } elseif { [llength $side] != 0 } {
    # Layer not set, but side is, so use that to determine layer
    switch -regexp $side {
      "1|3" {
        set layer [lindex $sc_hpinmetal 0]
      }
      "2|4" {
        set layer [lindex $sc_vpinmetal 0]
      }
      default {
        utl::error FLW 1 "Side number ($side) is not supported."
      }
    }
  } else {
    utl::error FLW 1 "$name needs to either specify side or layer parameter."
  }
  set edge_length 0
  switch -regexp $side {
    "1|3" {
      set edge_length [expr [lindex [ord::get_die_area] 3] - [lindex [ord::get_die_area] 1]]
    }
    "2|4" {
      set edge_length [expr [lindex [ord::get_die_area] 2] - [lindex [ord::get_die_area] 0]]
    }
    default {
      utl::error FLW 1 "Side number ($side) is not supported."
    }
  }
  set spacing [expr $edge_length / ([llength $ordered_pins] + 1)]
  for {set i 0} { $i < [llength $ordered_pins] } { incr i } {
    set name [lindex $ordered_pins $i]
    switch -regexp $side {
      "1" {
        set x_loc [lindex [ord::get_die_area] 1]
        set y_loc [expr ($i + 1) * $spacing]
      }
      "2" {
        set x_loc [expr ($i + 1) * $spacing]
        set y_loc [lindex [ord::get_die_area] 3]
      }
      "3" {
        set x_loc [lindex [ord::get_die_area] 2]
        set y_loc [expr ($i + 1) * $spacing]
      }
      "4" {
        set x_loc [expr ($i + 1) * $spacing]
        set y_loc [lindex [ord::get_die_area] 1]
      }
      default {
        utl::error FLW 1 "Side number ($side) is not supported."
      }
    }
    place_pin -pin_name $name \
      -layer $layer \
      -location "$x_loc $y_loc" \
      -force_to_die_boundary
  }
}
###########################
# Macro placement
###########################
# If manual macro placement is provided use that first
if {[dict exists $sc_cfg constraint component]} {
  set sc_snap_strategy [dict get $sc_cfg tool $sc_tool task $sc_task {var} ifp_snap_strategy]
  if { $sc_snap_strategy == "manufacturing_grid" } {
    if { [ord::get_db_tech] hasManufacturingGrid } {
      set x_grid [[ord::get_db_tech] getManufacturingGrid]
      set y_grid $x_grid
    } else {
      utl::warn FLW 1 "Manufacturing grid is not defined, defaulting to 'none' snapping strategy"
      set x_grid 1
      set y_grid 1
    }
  } elseif { $sc_snap_strategy == "site" } {
    set x_grid 0
    set y_grid 0
    foreach row [[ord::get_db_block] getRows] {
      set site [$row getSite]
      if { [$site getClass] == "PAD" } {
        continue
      }
      set site_height [$site getHeight]
      set site_width  [$site getWidth]
      if { $y_grid == 0 } {
        set y_grid $site_height
      } elseif { $y_grid > $site_height } {
        set y_grid $site_height
      }
      if { $x_grid == 0 } {
        set x_grid $site_width
      } elseif { $x_grid > $site_width } {
        set x_grid $site_width
      }
    }
  } else {
    set x_grid 1
    set y_grid 1
  }
  if { $x_grid == 0 || $y_grid == 0 } {
    utl::warn FLW 1 "Unable to determine snapping grid."
    set x_grid 1
    set y_grid 1
  }
  set x_grid [ord::dbu_to_microns $x_grid]
  set y_grid [ord::dbu_to_microns $y_grid]
  dict for {name params} [dict get $sc_cfg constraint component] {
    set location [dict get $params placement]
    set rotation [dict get $params rotation]
    set flip     [dict get $params flip]
    if { [dict exists $params partname] } {
      set cell   [dict get $params partname]
    } else {
      set cell ""
    }
    if { [llength [dict get $params halo]] != 0 } {
      utl::warn FLW 1 "Halo is not supported in OpenROAD"
    }
    set transform_r [odb::dbTransform]
    $transform_r setOrient "R${rotation}"
    set transform_f [odb::dbTransform]
    if { $flip == "true" } {
      $transform_f setOrient [odb::dbTransform "MY"]
    }
    set transform_final [odb::dbTransform]
    odb::dbTransform_concat $transform_r $transform_f $transform_final
    set inst [[ord::get_db_block] findInst $name]
    if { $inst == "NULL" } {
      utl::error FLW 1 "Could not find instance: $name"
    }
    set master [$inst getMaster]
    set height [ord::dbu_to_microns [$master getHeight]]
    set width [ord::dbu_to_microns [$master getWidth]]
    set x_loc [expr [lindex $location 0] - $width / 2]
    set y_loc [expr [lindex $location 1] - $height / 2]
    set x_loc [expr round($x_loc / $x_grid) * $x_grid]
    set y_loc [expr round($y_loc / $y_grid) * $y_grid]
    set place_args []
    if { $cell != "" } {
      lappend place_args "-cell" $cell
    }
    place_cell -inst_name $name \
      -origin "$x_loc $y_loc" \
      -orient [$transform_final getOrient] \
      -status FIRM \
      {*}$place_args
  }
}
if { $do_automatic_pins } {
  ###########################
  # Automatic Pin Placement
  ###########################
  if {[dict exists $sc_cfg tool $sc_tool task $sc_task var pin_thickness_h]} {
    set h_mult [lindex [dict get $sc_cfg tool $sc_tool task $sc_task var pin_thickness_h] 0]
    set_pin_thick_multiplier -hor_multiplier $h_mult
  }
  if {[dict exists $sc_cfg tool $sc_tool task $sc_task var pin_thickness_v]} {
    set v_mult [lindex [dict get $sc_cfg tool $sc_tool task $sc_task var pin_thickness_v] 0]
    set_pin_thick_multiplier -ver_multiplier $v_mult
  }
  if {[dict exists $sc_cfg tool $sc_tool task $sc_task {file} ppl_constraints]} {
    foreach pin_constraint [dict get $sc_cfg tool $sc_tool task $sc_task {file} ppl_constraints] {
      puts "Sourcing pin constraints: ${pin_constraint}"
      source $pin_constraint
    }
  }
  place_pins -hor_layers $sc_hpinmetal \
    -ver_layers $sc_vpinmetal \
    -random
}
Found 0 macro blocks.
Using 1u default distance from corners.
Using 2 tracks default min distance between IO pins.
[INFO PPL-0007] Random pin placement.
# Need to check if we have any macros before performing macro placement,
# since we get an error otherwise.
if {[design_has_unplaced_macros]} {
  if { $openroad_rtlmp_enable == "true" } {
    set halo_max [expr max($openroad_mpl_macro_place_halo)]
    set rtlmp_args []
    if { $openroad_rtlmp_min_instances != "" } {
      lappend rtlmp_args -min_num_inst $openroad_rtlmp_min_instances
    }
    if { $openroad_rtlmp_max_instances != "" } {
      lappend rtlmp_args -max_num_inst $openroad_rtlmp_max_instances
    }
    if { $openroad_rtlmp_min_macros != "" } {
      lappend rtlmp_args -min_num_macro $openroad_rtlmp_min_macros
    }
    if { $openroad_rtlmp_max_macros != "" } {
      lappend rtlmp_args -max_num_macro $openroad_rtlmp_max_macros
    }
    rtl_macro_placer -report_directory reports/rtlmp \
      -halo_width $halo_max \
      {*}$rtlmp_args
  } else {
    ###########################
    # TDMS Placement
    ###########################
    global_placement -density $openroad_gpl_place_density \
      -pad_left $openroad_gpl_padding \
      -pad_right $openroad_gpl_padding
    ###########################
    # Macro placement
    ###########################
    macro_placement -halo $openroad_mpl_macro_place_halo \
      -channel $openroad_mpl_macro_place_channel
    # Note: some platforms set a "macro blockage halo" at this point, but the
    # technologies we support do not, so we don't include that step for now.
  }
}
if { [design_has_unplaced_macros] } {
  utl::error FLW 1 "Design contains unplaced macros."
}
###########################
# Insert tie cells
###########################
foreach tie_type "high low" {
  if {[has_tie_cell $tie_type]} {
    insert_tiecells [get_tie_cell $tie_type]
  }
}
[INFO IFP-0030] Inserted 0 tiecells using sky130_fd_sc_hd__conb_1/HI.
[INFO IFP-0030] Inserted 0 tiecells using sky130_fd_sc_hd__conb_1/LO.
global_connect
###########################
# Tap Cells
###########################
if { [dict exists $sc_cfg tool $sc_tool task $sc_task {file} ifp_tapcell] } {
  set tapcell_file [lindex [dict get $sc_cfg tool $sc_tool task $sc_task {file} ifp_tapcell] 0]
  puts "Sourcing tapcell file: ${tapcell_file}"
  source $tapcell_file
  global_connect
}
Sourcing tapcell file: /third_party/pdks/skywater/skywater130/libs/sky130hd/v0_0_2/apr/openroad/tapcell.tcl
[INFO TAP-0005] Inserted 335 tapcells.
###########################
# Power Network
###########################
if {$openroad_pdn_enable == "true" && \
    [dict exists $sc_cfg tool $sc_tool task $sc_task {file} pdn_config] && \
    [llength [dict get $sc_cfg tool $sc_tool task $sc_task {file} pdn_config]] > 0} {
  foreach pdnconfig [dict get $sc_cfg tool $sc_tool task $sc_task {file} pdn_config] {
    puts "Sourcing PDNGEN configuration: ${pdnconfig}"
    source $pdnconfig
  }
  pdngen -failed_via_report "reports/${sc_design}_pdngen_failed_vias.rpt"
} else {
  utl::warn FLW 1 "No power grid inserted"
}
Sourcing PDNGEN configuration: /third_party/pdks/skywater/skywater130/libs/sky130hd/v0_0_2/apr/openroad/pdngen.tcl
[INFO PDN-0001] Inserting grid: grid
###########################
# Check Power Network
###########################
foreach net [[ord::get_db_block] getNets] {
  set type [$net getSigType]
  if {$type == "POWER" || $type == "GROUND"} {
    set net_name [$net getName]
    if { ![$net isSpecial] } {
      utl::warn FLW 1 "$net_name is marked as a supply net, but is not marked as a special net"
    }
    if { $openroad_psm_enable == "true" } {
      puts "Check supply net: $net_name"
      check_power_grid -net $net_name
    }
  }
}
Check supply net: VDD
[WARNING PSM-0016] Voltage pad location (VSRC) file not specified, defaulting pad location to checkerboard pattern on core area.
[WARNING PSM-0017] X direction bump pitch is not specified, defaulting to 140um.
[WARNING PSM-0018] Y direction bump pitch is not specified, defaulting to 140um.
[WARNING PSM-0019] Voltage on net VDD is not explicitly set.
[WARNING PSM-0022] Using voltage 1.950V for VDD network.
[WARNING PSM-0065] VSRC location not specified, using default checkerboard pattern with one VDD every size bumps in x-direction and one in two bumps in the y-direction
[INFO PSM-0076] Setting metal node density to be standard cell height times 5.
[INFO PSM-0031] Number of PDN nodes on net VDD = 1510.
[INFO PSM-0064] Number of voltage sources = 1.
[INFO PSM-0040] All PDN stripes on net VDD are connected.
Check supply net: VSS
[WARNING PSM-0016] Voltage pad location (VSRC) file not specified, defaulting pad location to checkerboard pattern on core area.
[WARNING PSM-0017] X direction bump pitch is not specified, defaulting to 140um.
[WARNING PSM-0018] Y direction bump pitch is not specified, defaulting to 140um.
[WARNING PSM-0019] Voltage on net VSS is not explicitly set.
[WARNING PSM-0021] Using voltage 0.000V for ground network.
[WARNING PSM-0065] VSRC location not specified, using default checkerboard pattern with one VDD every size bumps in x-direction and one in two bumps in the y-direction
[INFO PSM-0076] Setting metal node density to be standard cell height times 5.
[WARNING PSM-0030] VSRC location at (85.100um, 85.680um) and size 10.000um, is not located on an existing power stripe node. Moving to closest node at (72.450um, 73.440um).
[INFO PSM-0031] Number of PDN nodes on net VSS = 1746.
[INFO PSM-0064] Number of voltage sources = 1.
[INFO PSM-0040] All PDN stripes on net VSS are connected.
###########################
# Remove buffers inserted by synthesis
###########################
remove_buffers
[INFO RSZ-0026] Removed 14 buffers.
SC_METRIC: report_checks -path_delay max
Startpoint: index_$_SDFFE_PN0P__Q_7
            (rising edge-triggered flip-flop clocked by clk)
Endpoint: index_$_SDFFE_PN0P__Q_5
          (rising edge-triggered flip-flop clocked by clk)
Path Group: clk
Path Type: max
Corner: slow

    Cap   Delay    Time   Description
----------------------------------------------------------------
           0.00    0.00   clock clk (rise edge)
           0.00    0.00   clock network delay (ideal)
           0.00    0.00 ^ index_$_SDFFE_PN0P__Q_7/CLK (sky130_fd_sc_hd__dfxtp_1)
   0.02    1.54    1.54 ^ index_$_SDFFE_PN0P__Q_7/Q (sky130_fd_sc_hd__dfxtp_1)
   0.01    0.41    1.95 v _207_/Y (sky130_fd_sc_hd__inv_1)
   0.01    0.95    2.90 v next_index_$_MUX__Y_6_B_sky130_fd_sc_hd__ha_1_SUM_A_sky130_fd_sc_hd__ha_1_A_1/COUT (sky130_fd_sc_hd__ha_1)
   0.07    2.58    5.47 ^ next_index_$_MUX__Y_6_B_sky130_fd_sc_hd__ha_1_SUM_A_sky130_fd_sc_hd__ha_1_A_1_COUT_sky130_fd_sc_hd__ha_1_B/SUM (sky130_fd_sc_hd__ha_1)
   0.00    1.33    6.81 ^ _148_/X (sky130_fd_sc_hd__mux2_2)
   0.00    0.14    6.94 v _151_/Y (sky130_fd_sc_hd__a21oi_1)
           0.00    6.94 v index_$_SDFFE_PN0P__Q_5/D (sky130_fd_sc_hd__dfxtp_1)
                   6.94   data arrival time

          10.00   10.00   clock clk (rise edge)
           0.00   10.00   clock network delay (ideal)
           0.00   10.00   clock reconvergence pessimism
                  10.00 ^ index_$_SDFFE_PN0P__Q_5/CLK (sky130_fd_sc_hd__dfxtp_1)
          -0.84    9.16   library setup time
                   9.16   data required time
----------------------------------------------------------------
                   9.16   data required time
                  -6.94   data arrival time
----------------------------------------------------------------
                   2.22   slack (MET)

SC_METRIC: report_checks -path_delay min
Startpoint: index_$_SDFFE_PN0P__Q_2
            (rising edge-triggered flip-flop clocked by clk)
Endpoint: index_$_SDFFE_PN0P__Q_2
          (rising edge-triggered flip-flop clocked by clk)
Path Group: clk
Path Type: min
Corner: fast

    Cap   Delay    Time   Description
----------------------------------------------------------------
           0.00    0.00   clock clk (rise edge)
           0.00    0.00   clock network delay (ideal)
           0.00    0.00 ^ index_$_SDFFE_PN0P__Q_2/CLK (sky130_fd_sc_hd__dfxtp_1)
   0.01    0.21    0.21 ^ index_$_SDFFE_PN0P__Q_2/Q (sky130_fd_sc_hd__dfxtp_1)
   0.00    0.04    0.25 v _163_/Y (sky130_fd_sc_hd__a21oi_1)
           0.00    0.25 v index_$_SDFFE_PN0P__Q_2/D (sky130_fd_sc_hd__dfxtp_1)
                   0.25   data arrival time

           0.00    0.00   clock clk (rise edge)
           0.00    0.00   clock network delay (ideal)
           0.00    0.00   clock reconvergence pessimism
                   0.00 ^ index_$_SDFFE_PN0P__Q_2/CLK (sky130_fd_sc_hd__dfxtp_1)
          -0.03   -0.03   library hold time
                  -0.03   data required time
----------------------------------------------------------------
                  -0.03   data required time
                  -0.25   data arrival time
----------------------------------------------------------------
                   0.28   slack (MET)

SC_METRIC: unconstrained
Startpoint: index_$_SDFFE_PN0P__Q_7
            (rising edge-triggered flip-flop clocked by clk)
Endpoint: index_$_SDFFE_PN0P__Q_5
          (rising edge-triggered flip-flop clocked by clk)
Path Group: clk
Path Type: max
Corner: slow

    Cap   Delay    Time   Description
----------------------------------------------------------------
           0.00    0.00   clock clk (rise edge)
           0.00    0.00   clock network delay (ideal)
           0.00    0.00 ^ index_$_SDFFE_PN0P__Q_7/CLK (sky130_fd_sc_hd__dfxtp_1)
   0.02    1.54    1.54 ^ index_$_SDFFE_PN0P__Q_7/Q (sky130_fd_sc_hd__dfxtp_1)
   0.01    0.41    1.95 v _207_/Y (sky130_fd_sc_hd__inv_1)
   0.01    0.95    2.90 v next_index_$_MUX__Y_6_B_sky130_fd_sc_hd__ha_1_SUM_A_sky130_fd_sc_hd__ha_1_A_1/COUT (sky130_fd_sc_hd__ha_1)
   0.07    2.58    5.47 ^ next_index_$_MUX__Y_6_B_sky130_fd_sc_hd__ha_1_SUM_A_sky130_fd_sc_hd__ha_1_A_1_COUT_sky130_fd_sc_hd__ha_1_B/SUM (sky130_fd_sc_hd__ha_1)
   0.00    1.33    6.81 ^ _148_/X (sky130_fd_sc_hd__mux2_2)
   0.00    0.14    6.94 v _151_/Y (sky130_fd_sc_hd__a21oi_1)
           0.00    6.94 v index_$_SDFFE_PN0P__Q_5/D (sky130_fd_sc_hd__dfxtp_1)
                   6.94   data arrival time

          10.00   10.00   clock clk (rise edge)
           0.00   10.00   clock network delay (ideal)
           0.00   10.00   clock reconvergence pessimism
                  10.00 ^ index_$_SDFFE_PN0P__Q_5/CLK (sky130_fd_sc_hd__dfxtp_1)
          -0.84    9.16   library setup time
                   9.16   data required time
----------------------------------------------------------------
                   9.16   data required time
                  -6.94   data arrival time
----------------------------------------------------------------
                   2.22   slack (MET)

SC_METRIC: clock_skew
Clock clk
Latency      CRPR       Skew
index_$_SDFFE_PN0P__Q/CLK ^
   0.24
index_$_SDFFE_PN0P__Q/CLK ^
   0.24      0.00       0.00

SC_METRIC: DRV violators

SC_METRIC: floating nets
SC_METRIC: tns
tns 0.00

SC_METRIC: setupslack
worst slack 2.22

SC_METRIC: holdslack
worst slack 0.28

SC_METRIC: fmax
128.57103986962971 MHz
SC_METRIC: power
Power for corner: fast
Group                  Internal  Switching    Leakage      Total
                          Power      Power      Power      Power (Watts)
----------------------------------------------------------------
Sequential             1.53e-04   1.94e-05   2.20e-06   1.74e-04  63.6%
Combinational          5.62e-05   4.22e-05   1.11e-06   9.96e-05  36.4%
Macro                  0.00e+00   0.00e+00   0.00e+00   0.00e+00   0.0%
Pad                    0.00e+00   0.00e+00   0.00e+00   0.00e+00   0.0%
----------------------------------------------------------------
Total                  2.09e-04   6.16e-05   3.31e-06   2.74e-04 100.0%
                          76.3%      22.5%       1.2%

Power for corner: slow
Group                  Internal  Switching    Leakage      Total
                          Power      Power      Power      Power (Watts)
----------------------------------------------------------------
Sequential             6.59e-05   9.01e-06   4.40e-07   7.54e-05  65.4%
Combinational          2.17e-05   1.82e-05   2.76e-11   3.99e-05  34.6%
Macro                  0.00e+00   0.00e+00   0.00e+00   0.00e+00   0.0%
Pad                    0.00e+00   0.00e+00   0.00e+00   0.00e+00   0.0%
----------------------------------------------------------------
Total                  8.77e-05   2.72e-05   4.40e-07   1.15e-04 100.0%
                          76.0%      23.6%       0.4%

Power for corner: typical
Group                  Internal  Switching    Leakage      Total
                          Power      Power      Power      Power (Watts)
----------------------------------------------------------------
Sequential             1.24e-04   1.61e-05   4.40e-07   1.40e-04  65.5%
Combinational          3.97e-05   3.44e-05   4.53e-10   7.40e-05  34.5%
Macro                  0.00e+00   0.00e+00   0.00e+00   0.00e+00   0.0%
Pad                    0.00e+00   0.00e+00   0.00e+00   0.00e+00   0.0%
----------------------------------------------------------------
Total                  1.63e-04   5.04e-05   4.41e-07   2.14e-04 100.0%
                          76.3%      23.5%       0.2%

SC_METRIC: cellarea
Design area 2972 u^2 12% utilization.
